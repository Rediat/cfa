#-* - coding: latin-1 -*-
import csv
import os
import sys
import re
import glob
import string
import codecs
from collections import defaultdict

def wordlist():
	#****************** START opening stemmer files ********************
	print "\n Loading corpus files to memory ... "
	path = 'corpus'
	All = []
	wordlist = []
	frequencyTable = []
	
	for ind, infile in enumerate(glob.glob(os.path.join(path, '*.txt'))):
		try:
			filename = string.split(infile, '/')[-1]
						
			suf=codecs.open(infile,'r', encoding = 'utf-8' )
			suffix_raw = suf.read()
			suffix = suffix_raw.split()
			suf.close()
			
			full_text=[]
			for item in suffix:
				full_text.append(item.strip())
			temps = []
			wordslist = set(full_text)
			for items in wordslist:
				i=0
				for term in full_text:
					if to_unicode(items)==to_unicode(term):
						i+=1
				temps=[items,i]
				frequencyTable.append(temps)
				frequencyTable.sort(key = lambda nn:nn[1], reverse = True)
				#print left(filename,3)
				j=1
				
			for l in frequencyTable:
				temp = [j, l[0].strip().encode('utf-8'),l[1],len(l[0]),filename[:2], (j+0.00)/len(frequencyTable)]
				j+=1
				
				print "{} {} {} {} {} {}".format(temp[0], temp[1],temp[2],temp[3],temp[4],temp[5])
				
		except IOError:
				print """ Error: Can not open the file: "suffix.txt" """
				return
		else:
				print " Done"
  #****************** END opening stemmer files **********************
def to_unicode(obj, encoding='utf-8'):
	if isinstance(obj, basestring):
		if not isinstance(obj, unicode):
			obj = unicode(obj, encoding)
	return obj	
def main():
	wordlist()
if __name__ == '__main__':
  main()